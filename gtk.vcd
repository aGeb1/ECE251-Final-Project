$date
	Sun May 15 20:52:29 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module datapath $end
$var reg 1 ! clk $end
$upscope $end
$scope module datapath $end
$var wire 8 " pcout [7:0] $end
$upscope $end
$scope module datapath $end
$var wire 24 # instruction [23:0] $end
$upscope $end
$scope module datapath $end
$var wire 8 $ aluout [7:0] $end
$upscope $end
$scope module datapath $end
$var wire 1 % regwrite $end
$upscope $end
$scope module datapath $end
$var wire 1 & memwrite $end
$upscope $end
$scope module datapath $end
$var wire 1 ' rori $end
$upscope $end
$scope module datapath $end
$var wire 1 ( aluordm $end
$upscope $end
$scope module datapath $end
$var wire 1 ) branch $end
$upscope $end
$scope module datapath $end
$var wire 8 * dmout [7:0] $end
$upscope $end
$scope module datapath $end
$var wire 8 + branchi [7:0] $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx +
bx *
x)
x(
x'
x&
x%
b0 $
bx #
bx "
0!
$end
#1
b11111111 $
1%
0'
0)
0&
1(
b101000111111110000000001 #
b0 "
#10
b11111111 +
1!
#20
b1111111 $
bx +
b101000011111110000000010 #
b1 "
0!
#30
b1111111 +
1!
#40
b11111111 *
0%
b11111111 $
b0 +
1&
0(
b10000000000000000100000 #
b10 "
0!
#50
1!
#60
b1111111 *
b10000000 $
b10000000000010001000000 #
b11 "
0!
#70
1!
#80
1%
b11111111 *
b0 $
bx +
0&
b1000000000000000000011 #
b100 "
0!
#90
b11111111 +
1!
#100
bx *
b1 $
bx +
b1000000000010000000100 #
b101 "
0!
#110
1!
#120
bx $
1'
1(
b100001000001000001100101 #
b110 "
0!
#130
1!
#140
b11111111 *
b11111111 +
b100000000000000010100001 #
b111 "
0!
#150
bx +
1!
#160
b0 $
0%
b11111111 +
0'
1)
0(
b1000000000000000011 #
b1000 "
0!
#170
1!
#180
0!
